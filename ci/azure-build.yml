parameters:
- name: zolaVersion
  default: '0.18.0'
  type: string

jobs:

- job: build
  pool:
    vmImage: ubuntu-latest

  # XXX: Needed so that we can post our robotic GitHub comment
  variables:
  - group: Deployment Credentials

  steps:

  - download: current

  - checkout: self
    fetchDepth: 0

  - bash: |
      curl -fsSL \
        'https://github.com/getzola/zola/releases/download/v${{ parameters.zolaVersion }}/zola-v${{ parameters.zolaVersion }}-x86_64-unknown-linux-gnu.tar.gz' \
      | tar zx
    displayName: "Install Zola ${{ parameters.zolaVersion }}"

  - bash: |
      git switch -c deploy
      git pull --ff-only $(pipeline.workspace)/git-deploy-prep/deploy-prep.bundle
    displayName: Restore deploy-prep commit

  - bash: ./zola build -o $(build.artifactStagingDirectory)/website
    displayName: "Build site with Zola"

  - task: PublishPipelineArtifact@0
    displayName: Store built site as pipeline artifact
    inputs:
      artifactName: website
      targetPath: $(build.artifactStagingDirectory)/website

  # Our one post-build analytics step happens here. If we had more steps, I
  # think that we'd probably want to add another pipeline stage to generate the
  # metadata based on the built artifact.

  - bash: |
      set -xeuo pipefail

      chmod +x $(pipeline.workspace)/deploytool/deploytool

      artifact_dir="$(build.artifactStagingDirectory)/size-report"
      mkdir -p "$artifact_dir"

      $(pipeline.workspace)/deploytool/deploytool size-report \
        --pr-number $(system.pullRequest.pullRequestNumber) \
        --content-path $(build.artifactStagingDirectory)/website \
        --result-path "$artifact_dir/_output_treesize.txt"
    displayName: "deploytool size-report"
    env:
      GITHUB_TOKEN: $(GITHUB_TOKEN)

  - task: PublishPipelineArtifact@0
    displayName: Store size-report pipeline artifact
    inputs:
      artifactName: size-report
      targetPath: $(build.artifactStagingDirectory)/size-report